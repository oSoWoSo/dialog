#!/bin/bash
# Color definitions
green=$(tput setaf 2)
red=$(tput setaf 1)
none=$(tput sgr0)
version="0.0.1"
progname=${0##*/}
echo "$progname"
echo $version
echo "Source:"
echo "https://codeberg.org/oSoWoSo/dialog"

# dialog colors
BLACK="\Z0"
RED="\Z1"
GREEN="\Z2"
YELLOW="\Z3"
BLUE="\Z4"
MAGENTA="\Z5"
CYAN="\Z6"
WHITE="\Z7"
BOLD="\Zb"
REVERSE="\Zr"
UNDERLINE="\Zu"
RESET="\Zn"
# Properties shared per widget.
MENULABEL="${BOLD}Use UP and DOWN keys to navigate \
menus. Use TAB to switch between buttons and ENTER to select.${RESET}"
DIALOG() {
    rm -f $ANSWER
    dialog --colors --keep-tite --no-shadow --no-mouse \
        --backtitle "${BOLD}${WHITE}Void Linux installation -- https://www.voidlinux.org (0.22 d14162a)${RESET}" \
        --cancel-label "Back" --aspect 20 "$@" 2>$ANSWER
    return $?
}
# begin
if [ -f /bin/bash ]; then
echo -e "\n${green}bash already installed...${none}\n"
else
	sudo xbps-install bash
fi
if [ -f /bin/dialog ]; then
echo -e "\n${green}dialog already installed...${none}\n"
else
	sudo xbps-install dialog
fi
dialog --checklist "01 - Begin:" 0 0 0 \
ask "Ask part" off \
install "Install without ask again" off \
remove "Remove .tmp files" off \
exit "Quit $progname" off 2> begin.tmp
if grep 'remove' begin.tmp ;then
	rm ./*tmp*
fi
if grep 'exit' begin.tmp ;then
	exit
fi
## Asking part ## ------------------------------------------------------
if grep 'ask' begin.tmp ;then
# mirors
dialog --radiolist "Select mirror:" 0 0 0 \
00 "Revert to default mirror" off \
01 "Asia:Almaty,KZ	https://mirror.ps.kz/voidlinux" off \
02 "Asia:China	https://mirrors.bfsu.edu.cn/voidlinux" off \
03 "Asia:China	https://mirrors.cnnic.cn/voidlinux" off \
04 "Asia:China	https://mirrors.tuna.tsinghua.edu.cn/voidlinux" off \
05 "Asia:China	https://mirror.sjtu.edu.cn/voidlinux" off \
06 "Asia:Seoul,SK	https://mirror.maakpain.kro.kr/void" off \
07 "Asia:Singapore	https://void.webconverger.org" off \
08 "AU:Canberra	https://mirror.aarnet.edu.au/pub/voidlinux" off \
09 "AU:Melbourne	https://ftp.swin.edu.au/voidlinux" off \
10 "EU:Amsterdam,NL	https://void.cijber.net" off \
11 "EU:Denmark	http://ftp.dk.xemacs.org/voidlinux" off \
12 "EU:Denmark	https://mirrors.dotsrc.org/voidlinux" off \
13 "EU:Finland	https://alpha.de.repo.voidlinux.org" off \
14 "EU:Haarlem,NL	https://mirror.erickochen.nl/voidlinux" off \
15 "EU:Hungary	https://quantum-mirror.hu/mirrors/pub/voidlinux" off \
16 "EU:Monaco	https://voidlinux.qontinuum.space:4443" off \
17 "EU:Prague,CZ	https://mirror.fit.cvut.cz/voidlinux" off \
18 "EU:Russia	http://ftp.debian.ru/mirrors/voidlinux" off \
19 "EU:Russia	https://mirror.yandex.ru/mirrors/voidlinux" off \
20 "EU:Sweden	https://cdimage.debian.org/mirror/voidlinux" off \
21 "EU:Sweden	https://ftp.acc.umu.se/mirror/voidlinux" off \
22 "EU:Sweden	https://ftp.lysator.liu.se/pub/voidlinux" off \
23 "EU:Sweden	https://ftp.sunet.se/mirror/voidlinux" off \
24 "USA:Chicago	https://mirrors.servercentral.com/voidlinux" off \
25 "USA:KansasCity	https://alpha.us.repo.voidlinux.org" off \
26 "USA:NewYork	https://mirror.clarkson.edu/voidlinux" off 2> mirror.tmp
	if grep '00' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
	fi
	if grep '01' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.ps.kz/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '02' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirrors.bfsu.edu.cn/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '03' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirrors.cnnic.cn/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '04' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirrors.tuna.tsinghua.edu.cn/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '05' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.sjtu.edu.cn/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '06' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.maakpain.kro.kr/void|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '07' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://void.webconverger.org|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '08' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.aarnet.edu.au/pub/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '09' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://ftp.swin.edu.au/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '10' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://void.cijber.net|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '11' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|http://ftp.dk.xemacs.org/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '12' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirrors.dotsrc.org/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '13' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://alpha.de.repo.voidlinux.org|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '14' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.erickochen.nl/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '15' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://quantum-mirror.hu/mirrors/pub/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '16' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://voidlinux.qontinuum.space:4443|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '17' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.fit.cvut.cz/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '18' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|http://ftp.debian.ru/mirrors/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '19' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.yandex.ru/mirrors/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '20' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://cdimage.debian.org/mirror/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '21' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://ftp.acc.umu.se/mirror/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '22' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://ftp.lysator.liu.se/pub/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '23' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://ftp.sunet.se/mirror/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '24' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirrors.servercentral.com/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '25' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://alpha.us.repo.voidlinux.org|g' /etc/xbps.d/*-repository-*.conf
	fi
	if grep '26' mirror.tmp ;then
		sudo mkdir -p /etc/xbps.d
		sudo cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
		sudo sed -i 's|https://alpha.de.repo.voidlinux.org|https://mirror.clarkson.edu/voidlinux|g' /etc/xbps.d/*-repository-*.conf
	fi
# basic
	dialog --checklist "01 - Basic:" 0 0 0 \
	update "update system" off \
	recommended "recommended packages" off \
	development "development tools" off 2> basic.tmp
# repo
	dialog --checklist "02 - Nonfree and repositories:" 0 0 0 \
	repomu "void-repo-multilib" off \
	repono "void-repo-nonfree" off \
	repomn "void-repo-multilib-nonfree" off \
	nvidia "Nvidia proprietary drivers" off 2> repo.tmp
# ui
	dialog --checklist "03 - Choose user interface:" 0 0 0 \
	apps "Choose own apllications" off \
	de "Desktop environment" off \
	wm "Window manager and/or apps" off \
	minimal "Minimal xorg" off \
	xorg "Full xorg" off \
	wayland "Wayland" off 2> ui.tmp
# de
	if grep 'de' ui.tmp ;then
		dialog --checklist "04 - Choose desktop environment:" 0 0 0 \
		budgie "budgie" off \
		cinnamon "cinnamon" off \
		enlightenment "enlightenment" off \
		gnome "gnome" off \
		kde "kde plasma" off \
		lumina "lumina" off \
		lxde "lxde" off \
		lxqt "lxqt" off \
		mate "mate" off \
		xfce "xfce" off 2> de.tmp
	fi
	if grep 'kde' de.tmp ;then
		dialog --checklist "04a - Install kde applications?:" 0 0 0 \
		apps "Install KDE applications" off \
		connect "Install KDE Connect" off 2> kde.tmp
	fi
	if grep 'gnome' de.tmp ;then
		dialog --checklist "04b - Install gnome applications?:" 0 0 0 \
		apps "Install gnome applications" off 2> gnome.tmp
	fi
# wm
	if grep 'wm' ui.tmp ;then
		dialog --checklist "05 - Choose windows manager:" 0 0 0 \
		2bwm "Fast floating window manager" off \
		afterstep "Window Manager based on the look and feel of the NeXTStep interface" off \
		awesome "Highly configurable, next gen framework window manager for X" off \
		berry "Healthy, bite-sized window manager" off \
		blackboxwm "Stacking window manager for X11" off \
		bspwm "Tiling window manager based on binary space partitioning" off \
		byobu "Open source text-based window manager and terminal multiplexer" off \
		compiz "Compiz window manager meta-package" off \
		ctwm "Claude's Tab Window Manager" off \
		dvtm "Tiling window manager for the console" off \
		dwm "Dynamic window manager for X" off \
		evilwm "Minimalist window manager for the X Window System" off \
		fluxbox "Highly configurable and low resource X11 Window manager" off \
		fvwm "Extremely powerful ICCCM-compliant window manager" off \
		fvwm3 "Multiple large virtual desktop window manager" off \
		goomwwm "Get out of my way, Window Manager!" off \
		herbsluftwm "Manual tiling window manager for X" off \
		hikari "Stacking Wayland compositor with tiling features" off \
		i3 "Improved tiling window manager" off \
		i3-gaps "Improved tiling window manager - i3 fork with more features" off \
		icewm "Window Manager designed for speed, usability, and consistency" off \
		jwm "A light-weight window manager for the X11 Window System" off \
		mcwm "A minimalist stacking X window manager based on XCB" off \
		monsterwm "Minimal and lightweight dynamic tiling window manager" off \
		musca "Tiling window manager, with features nicked from ratpoison and dwm" off \
		mutter "Lightweight GTK+3 window manager" off \
		openbox "Standards compliant, fast, light-weight, extensible window manager" off \
		oroborus "A minimalistic window manager" off \
		pekwm "Window manager based on aewm++" off \
		qtile "A full-featured, hackable tiling window manager written and configured in Python" off \
		ratpoison "Window manager without mouse dependency" off \
		snapwm "Minimal and lightweight dynamic tiling window manager" off \
		sowm "Itsy bitsy floating window manager" off \
		spectrwm "Small dynamic tiling window manager for X11" off \
		subtle "Manual tiling window manager" off \
		sway "Tiling Wayland compositor compatible with i3" off \
		swm "A simple window manager" off \
		tinywm "Ridiculously tiny window manager" off \
		tmuxc "Local and remote tmux window manager" off \
		twm "Tab Window Manager for the X Window System" off \
		uwm "The ultimate window manager" off \
		vtwm "Virtual tab window manager" off \
		wayfire "3D wayland compositor" off \
		weston "Reference implementation of a Wayland compositor" off \
		wm2 "a simple window manager for X" off \
		wmderlan "Tiling window manager" off \
		wmfs "Window Manager From Scratch" off \
		wmii "Lightweight, dynamic window manager for X11" off \
		wmx "Simple window manager for X" off \
		xfwm4 "Next generation window manager for Xfce" off \
		xmonad "Tiling window manager fully configurable in Haskell" off \
		yeahwm "Window manager for X based on evilwm and aewm" off 2> wm.tmp
	fi
	if grep 'apps' ui.tmp ;then
# shell
		dialog --checklist "06 - Choose default shell:" 0 0 0 \
		bash "GNU Bourne Again Shell" off \
		fish "User friendly shell intended mostly for interactive use" off \
		zsh "Z shell" off 2> shell.tmp
# dm
		dialog --checklist "07 - Choose display manager:" 0 0 0 \
		cdm "cdm - Console Display Manager" off \
		emptty "emptty - Dead simple Display Manager running in CLI as TTY login" off \
		gdm "gdm - GNOME Display Manager" off \
		lightdm "lightdm - Light Display Manager" off \
		lxdm "lxdm - GUI login manager for LXDE" off \
		nodm "nodm - Minimalistic display manager for automatic logins" off \
		sddm "sddm - QML based X11 display manager" off \
		slim "slim - Desktop-independent graphical login manager for X11" off \
		stdm "stdm - Simple terminal display manager" off \
		xdm "xdm - X Display Manager" off 2> dm.tmp
# terminal
		dialog --checklist "08 - Choose terminal:" 0 0 0 \
		alacritty "alacritty" off \
		aminal "aminal" off \
		aterm "aterm" off \
		cool-retro-term "cool-retro-term" off \
		fbterm "fbterm" off \
		foot "foot (wayland)" off \
		gnome-terminal "gnome-terminal" off \
		kitty "kitty" off \
		konsole "konsole" off \
		lilyterm "lilyterm" off \
		lxterminal "lxterminal" off \
		mate-terminal "mate-terminal" off \
		qterminal "qterminal" off \
		roxterm "roxterm" off \
		rxvt-unicode "rxvt-unicode" off \
		sakura "sakura" off \
		terminal "terminal" off \
		terminator "terminator" off \
		terminology "terminology" off \
		tilix "tilix" off \
		xfce-terminal "xfce-terminal" off \
		xiate "xiate" off \
		xterm "xterm" off \
		yakuake "yakuake" off 2> terminal.tmp
# editor
		dialog --checklist "09 - Choose console text editor:" 0 0 0 \
		emacs "emacs" off \
		micro "micro" off \
		nano "nano" off \
		vim "vim" off 2> editor.tmp
# geditor
		dialog --checklist "10 - Choose graphical text editor:" 0 0 0 \
		atom "atom" off \
		bluefish "bluefish" off \
		code-oss "code-oss" off \
		emacs "emacs" off \
		geany "geany" off \
		gedit "gedit" off \
		gvim "gvim" off \
		gvim-huge "gvim-huge" off \
		kakoune "kakoune" off \
		kate "kate" off \
		leafpad "leafpad" off \
		mousepad "mousepad" off \
		neovim "neovim" off \
		notepoadqq "notepadqq" off \
		sublime "sublime" off \
		vile "vile" off \
		zile "zile" off 2> geditor.tmp
# browser
		dialog --checklist "11 - Choose browser:" 0 0 0 \
		badwolf "badwolf" off \
		chromium "chromium" off \
		falkon "falkon" off \
		firefox "firefox" off \
		firefox-esr "firefox-esr" off \
		qutebrowser "qutebrowser" off 2> browser.tmp
# media
		dialog --checklist "12 - Choose media player:" 0 0 0 \
		audacious "audacious" off \
		deadbeef "deadbeef" off \
		moc "moc" off \
		mplayer "mplayer" off \
		mpv "mpv" off \
		parole "parole" off \
		qmmp "qmmp" off \
		rage-player "rage-player" off \
		strawberry "strawberry" off \
		totem "totem" off \
		vlc "vlc" off \
		xnoise "xnoise" off 2> media.tmp
# net
		dialog --checklist "13 - Choose networking:" 0 0 0 \
		connman "connman" off \
		networkmanager "NetworkManager" off 2> net.tmp
		if grep 'connman' net.tmp ;then
			dialog --checklist "Choose connman frontend:" 0 0 0 \
			cmst "connman qt" off \
			gtk "connman gtk" off \
			ncurses "connman ncurses" off \
			tray "connman tray" off 2> connman.tmp
		fi
		if grep 'networkmanager' net.tmp ;then
			dialog --checklist "Choose NetworkManager frontend:" 0 0 0 \
			gtk "NetworkManager gtk applet" off \
			plasma "NetworkManager plasma applet" off \
			qt "NetworkManager qt applet" off 2> networkmanager.tmp
		fi
# virt
		dialog --checklist "14 - Choose virtualization:" 0 0 0 \
		aqemu "aqemu" off \
		barrier "barrier" off \
		passthrough "PCI passthrough" off \
		qemu "qemu" off \
		qemu-ga "qemu guest agent" off \
		virt-manager "virt-manager" off \
		vbox "virtualbox" off \
		vbox-guest "viartualbox guest utilities" 2> virt.tmp
# backup
		dialog --checklist "15 - Choose backup:" 0 0 0 \
		borg "borg" off \
		dejadup "dejadup" off \
		timeshift "timeshift" off 2> backup.tmp
	fi
fi
# install
dialog --checklist "16 - Install:" 0 0 0 \
ask "Ask part again" off \
install "Install" off \
exit "Quit $progname" off 2> begin.tmp
if grep 'ask' begin.tmp ;then
	sh "$progname"
fi
if grep 'remove' begin.tmp ;then
	rm ./*tmp*
fi
if grep 'exit' begin.tmp ;then
	exit
fi
## Working part ## -----------------------------------------------------
if grep 'install' begin.tmp ;then
# basic
	if grep 'update' basic.tmp ;then
		echo -e "\n${green}Checking for updates...${none}\n"
		sudo xbps-install -Su
	fi
	if grep 'recommended' basic.tmp ;then
		echo -e "\n${green}Install recommended packages...${none}\n"
		sudo xbps-install curl wget unzip zip gptfdisk mtools mlocate ntfs-3g fuse-exfat bash-completion linux-headers
	fi
	if grep 'development' basic.tmp ;then
		echo -e "\n${green}Install development tools...${none}\n"
		sudo xbps-install autoconf automake bison m4 make libtool flex meson ninja optipng sassc
	fi
# repo
	if grep 'repomu' repo.tmp ;then
		echo -e "\n${green}Install multilib repo...${none}\n"
		sudo xbps-install void-repo-multilib
	fi
	if grep 'repono' repo.tmp ;then
		echo -e "\n${green}Install nonfree repo...${none}\n"
		sudo xbps-install void-repo-nonfree
	fi
	if grep 'repomn' repo.tmp ;then
		echo -e "\n${green}Install multilib nonfree repo...${none}\n"
		sudo xbps-install void-repo-multilib-nonfree
	fi
	if grep 'nvidia' repo.tmp ;then
		echo -e "\n${green}Install latest nvidia drivers...${none}\n"
		sudo xbps-remove fx86-video-nouveau
		sudo xbps-install nvidia
	fi
# ui
	if grep 'minimal' ui.tmp ;then
		echo -e "\n${green}Install xorg...${none}\n"
		sudo xbps-install xorg-minimal xorg-video-drivers
	fi
	if grep 'xorg' ui.tmp ;then
		echo -e "\n${green}Install xorg...${none}\n"
		sudo xbps-install xorg-server xorg-server-xwayland xorg-video-drivers xorg-input-drivers xinit xauth xrandr xrdb xwininfo xdpyinfo xsetroot neofetch
		echo -e "\n${green}Copy configurations...${none}\n"
		if [ ! -d /etc/X11/xorg.conf.d ]; then
			sudo mkdir -p /etc/X11/xorg.conf.d
		fi
	fi
	if grep 'wayland' ui.tmp ;then
		echo -e "\n${green}Install wayland...${none}\n"
		sudo xbps-install wayland
	fi
# de
	if grep 'de' ui.tmp ;then
		if grep 'budgie' de.tmp ;then
			echo -e "\n${green}Install budgie...${none}\n"
			sudo xbps-install xorg-minimal budgie-desktop gnome-control-center gnome-system-monitor gnome-terminal nautilus nautilus-sendto gnome-keyring evince gedit gedit-plugins eog eog-plugins gnome-screenshot gnome-disk-utility gvfs gvfs-mtp gvfs-gphoto2 file-roller
		fi
		if grep 'cinnamon' de.tmp ;then
			echo -e "\n${green}Install cinnamon...${none}\n"
			sudo xbps-install xorg-minimal cinnamon gnome-system-monitor gnome-terminal gnome-screenshot gnome-disk-utility gnome-keyring gedit gedit-plugins evince gvfs gvfs-mtp gvfs-gphoto2 eog eog-plugins file-roller
		fi
		if grep 'enlightenment' de.tmp ;then
			echo -e "\n${green}Install enlightenment...${none}\n"
			sudo xbps-install enlightenment terminology mousepad gvfs gvfs-mtp gvfs-gphoto2 zathura zathura-pdf-poppler Thunar thunar-volman thunar-archive-plugin thunar-media-tags-plugin xarchiver
		fi
		if grep 'gnome' de.tmp ;then
			echo -e "\n${green}Install gnome...${none}\n"
			sudo xbps-install xorg-minimal gnome-shell gnome-control-center gnome-tweaks gnome-system-monitor gnome-terminal gdm gnome-disk-utility nautilus nautilus-sendto gvfs gvfs-mtp gvfs-gphoto2 eog eog-plugins evince gedit gedit-plugins gnome-video-effects gnome-themes-extra gnome-session gnome-screenshot gnome-shell-extensions gnome-icon-theme gnome-icon-theme-extras gnome-icon-theme-symbolic gnome-backgrounds file-roller chrome-gnome-shell totem
			if grep 'apps' gnome.tmp ;then
			echo -e "\n${green}Install gnome applications...${none}\n"
				sudo xbps-install gnome-calendar gnome-clocks gnome-weather evolution gnome-font-viewer gnome-calculator gnome-characters gnome-contacts gnome-documents gnome-maps
			fi
		fi
		if grep 'kde' de.tmp ;then
			echo -e "\n${green}Install kde...${none}\n"
			sudo xbps-install xorg-minimal plasma-desktop plasma-disks plasma-thunderbolt plasma-systemmonitor plasma-pa plasma-nm plasma-firewall plasma-browser-integration plasma-vault latte-dock oxygen kdegraphics-thumbnailers dolphin dolphin-plugins kate5 konsole okular gwenview ark sddm sddm-kcm yakuake spectacle partitionmanager ffmpegthumbs kde-gtk-config5
			if grep 'apps' kde.tmp ;then
			echo -e "\n${green}Install kde applications...${none}\n"
				sudo xbps-install kmail kontact korganizer kaddressbook akregator konversation kcalc kcharselect
			fi
			if grep 'connect' kde.tmp ;then
			echo -e "\n${green}Install kde Connect...${none}\n"
				sudo xbps-install kdeconnect
			fi
		fi
		if grep 'lumina' de.tmp ;then
			echo -e "\n${green}Install lumina...${none}\n"
			sudo xbps-install xorg-minimal lumina lumina-pdf lumina-calculator gvfs gvfs-mtp gvfs-gphoto2 mousepad viewnior
		fi
		if grep 'lxde' de.tmp ;then
			echo -e "\n${green}Install lxde...${none}\n"
			sudo xbps-install xorg-minimal lxde-common lxde-icon-theme lxappearance lxinput lxpanel lxrandr lxsession lxtask lxterminal pcmanfm gvfs gvfs-mtp gvfs-gphoto2 viewnior mousepad zathura zathura-pdf-poppler openbox obconf xarchiver
		fi
		if grep 'lxqt' de.tmp ;then
			echo -e "\n${green}Install lxqt...${none}\n"
			sudo xbps-install xorg-minimal lxqt-about lxqt-admin lxqt-archiver lxqt-build-tools lxqt-config lxqt-globalkeys lxqt-openssh-askpass lxqt-panel lxqt-policykit lxqt-powermanagement lxqt-qtplugin lxqt-runner lxqt-session lxqt-sudo lxqt-themes obconf-qt openbox pcmanfm-qt lximage-qt FeatherPad qlipper qterminal lxqt-notificationd
		fi
		if grep 'mate' de.tmp ;then
			echo -e "\n${green}Install mate...${none}\n"
			sudo xbps-install xorg-minimal mate-applets mate-backgrounds mate-calc mate-control-center mate-desktop mate-icon-theme mate-indicator-applet mate-media mate-menus mate-notification-daemon mate-panel mate-panel-appmenu mate-screensaver mate-sensors-applet mate-session-manager mate-settings-daemon mate-system-monitor mate-terminal mate-themes mate-tweak mate-utils mozo pluma caja caja-image-converter caja-sendto caja-open-terminal caja-wallpaper caja-xattr-tags eom atril gvfs gvfs-mtp gvfs-gphoto2 engrampa mate-power-manager mate-polkit
		fi
		if grep 'xfce' de.tmp ;then
			echo -e "\n${green}Install xfce...${none}\n"
			sudo xbps-install xorg-minimal xfce4-appfinder xfce4-battery-plugin xfce4-clipman-plugin xfce4-cpufreq-plugin xfce4-cpugraph-plugin xfce4-dict xfce4-diskperf-plugin xfce4-fsguard-plugin xfce4-genmon-plugin xfce4-mailwatch-plugin xfce4-mpc-plugin xfce4-netload-plugin xfce4-notifyd xfce4-panel xfce4-panel-appmenu xfce4-places-plugin xfce4-power-manager xfce4-pulseaudio-plugin xfce4-screensaver xfce4-screenshooter xfce4-sensors-plugin xfce4-session xfce4-settings xfce4-systemload-plugin xfce4-taskmanager xfce4-terminal xfce4-timer-plugin xfce4-verve-plugin xfce4-whiskermenu-plugin xfce4-xkb-plugin Thunar thunar-volman thunar-archive-plugin thunar-media-tags-plugin ristretto xarchiver mousepad xfwm4 xfdesktop zathura zathura-pdf-poppler gvfs gvfs-mtp gvfs-gphoto2 xfce-polkit parole
		fi
	fi
# wm
	if grep 'wm' ui.tmp ;then
		if grep '2bwm' wm.tmp ;then
			echo -e "\n${green}Install 2bwm...${none}\n"
			sudo xbps-install 2bwm
		fi
		if grep 'afterstep' wm.tmp ;then
			echo -e "\n${green}Install afterstep...${none}\n"
			sudo xbps-install afterstep
		fi
		if grep 'awesome' wm.tmp ;then
			echo -e "\n${green}Install awesome...${none}\n"
			sudo xbps-install awesome
		fi
		if grep 'berry' wm.tmp ;then
			echo -e "\n${green}Install berry...${none}\n"
			sudo xbps-install berry
		fi
		if grep 'blacboxwm' wm.tmp ;then
			echo -e "\n${green}Install blacboxwm...${none}\n"
			sudo xbps-install blacboxwm
		fi
		if grep 'bspwm' wm.tmp ;then
			echo -e "\n${green}Install bspwm...${none}\n"
			sudo xbps-install bspwm sxhkd
		fi
		if grep 'byobu' wm.tmp ;then
			echo -e "\n${green}Install byobu...${none}\n"
			sudo xbps-install byobu
		fi
		if grep 'compiz' wm.tmp ;then
			echo -e "\n${green}Install compiz...${none}\n"
			sudo xbps-install compiz-reloaded
		fi
		if grep 'ctwm' wm.tmp ;then
			echo -e "\n${green}Install ctwm...${none}\n"
			sudo xbps-install ctwm
		fi
		if grep 'dvtm' wm.tmp ;then
			echo -e "\n${green}Install dvtm...${none}\n"
			sudo xbps-install dvtm
		fi
		if grep 'dwm' wm.tmp ;then
			echo -e "\n${green}Install dwm...${none}\n"
			sudo xbps-install dwm
		fi
		if grep 'evilwm' wm.tmp ;then
			echo -e "\n${green}Install evilwm...${none}\n"
			sudo xbps-install evilwm
		fi
		if grep 'fluxbox' wm.tmp ;then
			echo -e "\n${green}Install fluxbox...${none}\n"
			sudo xbps-install fluxbox dunst feh arandr Thunar thunar-volman thunar-archive-plugin thunar-media-tags-plugin gvfs gvfs-mtp gvfs-gphoto2 scrot htop xarchiver viewnior
		fi
		if grep 'fvwm' wm.tmp ;then
			echo -e "\n${green}Install fvwm...${none}\n"
			sudo xbps-install fvwm
		fi
		if grep 'fvwm3' wm.tmp ;then
			echo -e "\n${green}Install fvwm3...${none}\n"
			sudo xbps-install fvwm3 feh arandr Thunar thunar-volman thunar-archive-plugin thunar-media-tags-plugin gvfs gvfs-mtp gvfs-gphoto2 scrot htop xarchiver viewnior
		fi
		if grep 'goomwwm' wm.tmp ;then
			echo -e "\n${green}Install goomwwm...${none}\n"
			sudo xbps-install goomwwm
		fi
		if grep 'herbsluftwm' wm.tmp ;then
			echo -e "\n${green}Install herbsluftwm...${none}\n"
			sudo xbps-install herbstluftwm
		fi
		if grep 'hikari' wm.tmp ;then
			echo -e "\n${green}Install hikari...${none}\n"
			sudo xbps-install hikari
		fi
		if grep 'i3' wm.tmp ;then
			echo -e "\n${green}Install i3...${none}\n"
			sudo xbps-install i3
		fi
		if grep 'i3-gaps' wm.tmp ;then
			echo -e "\n${green}Install i3-gaps...${none}\n"
			sudo xbps-install i3-gaps i3lock i3status i3blocks dunst dmenu feh Thunar thunar-volman thunar-archive-plugin thunar-media-tags-plugin xarchiver lm_sensors acpi playerctl scrot htop arandr gvfs gvfs-mtp gvfs-gphoto2 xfce4-taskmanager viewnior
		fi
		if grep 'icewm' wm.tmp ;then
			echo -e "\n${green}Install icewm...${none}\n"
			sudo xbps-install icewm
		fi
		if grep 'jwm' wm.tmp ;then
			echo -e "\n${green}Install jwm...${none}\n"
			sudo xbps-install jwm
		fi
		if grep 'mcwm' wm.tmp ;then
			echo -e "\n${green}Install mcwm...${none}\n"
			sudo xbps-install mcwm
		fi
		if grep 'monsterwm' wm.tmp ;then
			echo -e "\n${green}Install monsterwm...${none}\n"
			sudo xbps-install monsterwm
		fi
		if grep 'musca' wm.tmp ;then
			echo -e "\n${green}Install musca...${none}\n"
			sudo xbps-install musca
		fi
		if grep 'mutter' wm.tmp ;then
			echo -e "\n${green}Install mutter...${none}\n"
			sudo xbps-install mutter
		fi
		if grep 'openbox' wm.tmp ;then
			echo -e "\n${green}Install openbox...${none}\n"
			sudo xbps-install openbox obconf lxappearance jgmenu dunst feh lxrandr lxinput pcmanfm gvfs gvfs-mtp gvfs-gphoto2 lxtask scrot htop xarchiver viewnior tint2conf obmenu-generator
		fi
		if grep 'oroborus' wm.tmp ;then
			echo -e "\n${green}Install oroborus...${none}\n"
			sudo xbps-install oroborus
		fi
		if grep 'pekwm' wm.tmp ;then
			echo -e "\n${green}Install pekwm...${none}\n"
			sudo xbps-install pekwm
		fi
		if grep 'qtile' wm.tmp ;then
			echo -e "\n${green}Install qtile...${none}\n"
			sudo xbps-install python3 python3-pip python3-setuptools python3-wheel python3-virtualenv-clone python3-dbus python3-gobject pango pango-devel libffi-devel xcb-util-cursor gdk-pixbuf
#			sudo xbps-install feh arandr Thunar thunar-volman thunar-archive-plugin thunar-media-tags-plugin gvfs gvfs-mtp gvfs-gphoto2 scrot htop xarchiver viewnior
			pip install qtile
		fi
		if grep 'ratpoison' wm.tmp ;then
			echo -e "\n${green}Install ratpoison...${none}\n"
			sudo xbps-install ratpoison
		fi
		if grep 'snapwm' wm.tmp ;then
			echo -e "\n${green}Install snapwm...${none}\n"
			sudo xbps-install snapwm
		fi
		if grep 'sowm' wm.tmp ;then
			echo -e "\n${green}Install sowm...${none}\n"
			sudo xbps-install sowm
		fi
		if grep 'spectrwm' wm.tmp ;then
			echo -e "\n${green}Install spectrwm...${none}\n"
			sudo xbps-install spectrwm
		fi
		if grep 'subtle' wm.tmp ;then
			echo -e "\n${green}Install subtle...${none}\n"
			sudo xbps-install subtle
		fi
		if grep 'sway' wm.tmp ;then
			echo -e "\n${green}Install sway...${none}\n"
			sudo xbps-install wayland elogind dbus-elogind seatd sway swaybg swayidle swaylock azote grimshot Waybar gvfs gvfs-mtp gvfs-gphoto2 htop wofi xf86-video-qxl mesa-dri
		fi
		if grep 'swm' wm.tmp ;then
			echo -e "\n${green}Install swm...${none}\n"
			sudo xbps-install swm
		fi
		if grep 'tinywm' wm.tmp ;then
			echo -e "\n${green}Install tinywm...${none}\n"
			sudo xbps-install tinywm
		fi
		if grep 'tmuxc' wm.tmp ;then
			echo -e "\n${green}Install tmuxc...${none}\n"
			sudo xbps-install tmuxc
		fi
		if grep 'twm' wm.tmp ;then
			echo -e "\n${green}Install twm...${none}\n"
			sudo xbps-install twm
		fi
		if grep 'uwm' wm.tmp ;then
			echo -e "\n${green}Install uwm...${none}\n"
			sudo xbps-install uwm
		fi
		if grep 'vtwm' wm.tmp ;then
			echo -e "\n${green}Install vtwm...${none}\n"
			sudo xbps-install vtwm
		fi
		if grep 'wayfire' wm.tmp ;then
			echo -e "\n${green}Install wayfire...${none}\n"
			sudo xbps-install wayland wayfire grim gvfs gvfs-mtp gvfs-gphoto2 htop wofi mesa-dri
		fi
		if grep 'weston' wm.tmp ;then
			echo -e "\n${green}Install weston...${none}\n"
			sudo xbps-install weston
		fi
		if grep 'wm2' wm.tmp ;then
			echo -e "\n${green}Install wm2...${none}\n"
			sudo xbps-install wm2
		fi
		if grep 'wmderlan' wm.tmp ;then
			echo -e "\n${green}Install wmderlan...${none}\n"
			sudo xbps-install wmderlan
		fi
		if grep 'wmfs' wm.tmp ;then
			echo -e "\n${green}Install wmfs...${none}\n"
			sudo xbps-install wmfs
		fi
		if grep 'wmii' wm.tmp ;then
			echo -e "\n${green}Install wmii...${none}\n"
			sudo xbps-install wmii
		fi
		if grep 'wmx' wm.tmp ;then
			echo -e "\n${green}Install wmx...${none}\n"
			sudo xbps-install wmx
		fi
		if grep 'xfwm4' wm.tmp ;then
			echo -e "\n${green}Install xfwm4...${none}\n"
			sudo xbps-install xfwm4
		fi
		if grep 'xmonad' wm.tmp ;then
			echo -e "\n${green}Install xmonad...${none}\n"
			sudo xbps-install xmonad
		fi
		if grep 'yaehwm' wm.tmp ;then
			echo -e "\n${green}Install yaehwm...${none}\n"
			sudo xbps-install yaehwm
		fi
	fi
	if grep 'apps' ui.tmp ;then
# shell
		if grep 'bash' shell.tmp ;then
			echo -e "\n${green}Install bash shell...${none}\n"
			sudo xbps-install bash bash-completion
			sudo usermod --shell /bin/bash "$USER"
		fi
		if grep 'fish' shell.tmp ;then
			echo -e "\n${green}Install fish shell...${none}\n"
			sudo xbps-install fish-shell
			sudo usermod --shell /bin/fish "$USER"
		fi
		if grep 'zsh' shell.tmp ;then
			echo -e "\n${green}Install zsh shell...${none}\n"
			sudo xbps-install zsh zsh-autosuggestions zsh-completions \
			zsh-history-substring-search zsh-syntax-highlighting
			sudo usermod --shell /bin/zsh "$USER"
		fi
# dm
		if grep 'cdm' dm.tmp ;then
			echo -e "\n${green}Install cdm...${none}\n"
			sudo xbps-install cdm
		fi
		if grep 'emptty' dm.tmp ;then
			echo -e "\n${green}Install emptty...${none}\n"
			sudo xbps-install emptty
		fi
		if grep 'gdm' dm.tmp ;then
			echo -e "\n${green}Install gdm...${none}\n"
			sudo xbps-install gdm
		fi
		if grep 'lightdm' dm.tmp ;then
			echo -e "\n${green}Install lightdm...${none}\n"
			sudo xbps-install lightdm lightdm-gtk3-greeter lightdm-gtk-greeter-settings
		fi
		if grep 'lxdm' dm.tmp ;then
			echo -e "\n${green}Install lxdm...${none}\n"
			sudo xbps-install lxdm
		fi
		if grep 'nodm' dm.tmp ;then
			echo -e "\n${green}Install nodm...${none}\n"
			sudo xbps-install nodm
		fi
		if grep 'sddm' dm.tmp ;then
			echo -e "\n${green}Install sddm...${none}\n"
			sudo xbps-install sddm
		fi
		if grep 'slim' dm.tmp ;then
			echo -e "\n${green}Install ...${none}\n"
			sudo xbps-install slim slim-void-theme
			sudo cp conf.slim /etc/conf.slim
		fi
		if grep 'stdm' dm.tmp ;then
			echo -e "\n${green}Install stdm...${none}\n"
			sudo xbps-install stdm
		fi
		if grep 'xdm' dm.tmp ;then
			echo -e "\n${green}Install xdm...${none}\n"
			sudo xbps-install xdm
		fi
# terminal
		if grep 'alacritty' terminal.tmp ;then
			echo -e "\n${green}Install alacritty...${none}\n"
			sudo xbps-install alacritty alacritty-terminfo
			export TERMINAL="alacritty"
			printf TERM="alacritty" > ~/.bashrc
			term=alacritty
		fi
		if grep 'aminal' terminal.tmp ;then
			echo -e "\n${green}Install aminal...${none}\n"
			sudo xbps-install aminal
			export TERMINAL="aminal"
			printf TERM="aminal" > ~/.bashrc
			term=aminal
		fi
		if grep 'aterm' terminal.tmp ;then
			echo -e "\n${green}Install aterm...${none}\n"
			sudo xbps-install aterm
			export TERMINAL="aterm"
			printf TERM="aterm" > ~/.bashrc
			term=aterm
		fi
		if grep 'cool-retro-term' terminal.tmp ;then
			echo -e "\n${green}Install cool-retro-term...${none}\n"
			sudo xbps-install cool-retro-term
			export TERMINAL="cool-retro-term"
			printf TERM="cool-retro-term" > ~/.bashrc
			term=cool-retro-term
		fi
		if grep 'fbterm' terminal.tmp ;then
			echo -e "\n${green}Install fbterm...${none}\n"
			sudo xbps-install fbterm
			export TERMINAL="fbterm"
			printf TERM="fbterm" > ~/.bashrc
			term=fbterm
		fi
		if grep 'foot' terminal.tmp ;then
			echo -e "\n${green}Install foot...${none}\n"
			sudo xbps-install foot
			export TERMINAL="foot"
			printf TERM="foot" > ~/.bashrc
			term=foot
		fi
		if grep 'gnome-terminal' terminal.tmp ;then
			echo -e "\n${green}Install gnome-terminal...${none}\n"
			sudo xbps-install gnome-terminal
			export TERMINAL="gnome-terminal"
			printf TERM="gnome-terminal" > ~/.bashrc
			term=gnome-terminal
		fi
		if grep 'kitty' terminal.tmp ;then
			echo -e "\n${green}Install kitty...${none}\n"
			sudo xbps-install kitty kitty-terminfo
			export TERMINAL="kitty"
			printf TERM="kitty" > ~/.bashrc
			term=kitty
		fi
		if grep 'konsole' terminal.tmp ;then
			echo -e "\n${green}Install konsole...${none}\n"
			sudo xbps-install konsole
			export TERMINAL="konsole"
			printf TERM="konsole" > ~/.bashrc
			term=konsole
		fi
		if grep 'lilyterm' terminal.tmp ;then
			echo -e "\n${green}Install lilyterm...${none}\n"
			sudo xbps-install lilyterm
			export TERMINAL="lilyterm"
			printf TERM="lilyterm" > ~/.bashrc
			term=lilyterm
		fi
		if grep 'lxterminal' terminal.tmp ;then
			echo -e "\n${green}Install lxterminal...${none}\n"
			sudo xbps-install lxterminal
			export TERMINAL="lxterminal"
			printf TERM="lxterminal" > ~/.bashrc
			term=lxterminal
		fi
		if grep 'mate-terminal' terminal.tmp ;then
			echo -e "\n${green}Install mate-terminal...${none}\n"
			sudo xbps-install mate-terminal
			export TERMINAL="mate-terminal"
			printf TERM="mate-terminal" > ~/.bashrc
			term=mate-terminal
		fi
		if grep 'qterminal' terminal.tmp ;then
			echo -e "\n${green}Install qterminal...${none}\n"
			sudo xbps-install qterminal
			export TERMINAL="qterminal"
			printf TERM="qterminal" > ~/.bashrc
			term=qterminal
		fi
		if grep 'roxterm' terminal.tmp ;then
			echo -e "\n${green}Install roxterm...${none}\n"
			sudo xbps-install roxterm
			export TERMINAL="roxterm"
			printf TERM="roxterm" > ~/.bashrc
			term=roxterm
		fi
		if grep 'rxvt-unicode' terminal.tmp ;then
			echo -e "\n${green}Install rxvt-unicode...${none}\n"
			sudo xbps-install rxvt-unicode
			export TERMINAL="rxvt-unicode"
			printf TERM="rxvt-unicode" > ~/.bashrc
			term=rxvt-unicode
		fi
		if grep 'sakura' terminal.tmp ;then
			echo -e "\n${green}Install sakura...${none}\n"
			sudo xbps-install sakura
			export TERMINAL="sakura"
			printf TERM="sakura" > ~/.bashrc
			term=sakura
		fi
		if grep 'terminal' terminal.tmp ;then
			echo -e "\n${green}Install terminal...${none}\n"
			sudo xbps-install terminal
			export TERMINAL="terminal"
			printf TERM="terminal" > ~/.bashrc
			term=terminal
		fi
		if grep 'terminator' terminal.tmp ;then
			echo -e "\n${green}Install terminator...${none}\n"
			sudo xbps-install terminator
			export TERMINAL="terminator"
			printf TERM="terminator" > ~/.bashrc
			term=terminator
		fi
		if grep 'terminology' terminal.tmp ;then
			echo -e "\n${green}Install terminology...${none}\n"
			sudo xbps-install terminology
			export TERMINAL="terminology"
			printf TERM="terminology" > ~/.bashrc
			term=terminology
		fi
		if grep 'tilix' terminal.tmp ;then
			echo -e "\n${green}Install tilix...${none}\n"
			sudo xbps-install tilix
			export TERMINAL="tilix"
			printf TERM="tilix" > ~/.bashrc
			term=tilix
		fi
		if grep 'xfce-terminal' terminal.tmp ;then
			echo -e "\n${green}Install xfce-terminal...${none}\n"
			sudo xbps-install xfce-terminal
			export TERMINAL="xfce-terminal"
			printf TERM="xfce-terminal" > ~/.bashrc
			term=xfce-terminal
		fi
		if grep 'xiate' terminal.tmp ;then
			echo -e "\n${green}Install xiate...${none}\n"
			sudo xbps-install xiate
			export TERMINAL="xiate"
			printf TERM="xiate" > ~/.bashrc
			term=xiate
		fi
		if grep 'xterm' terminal.tmp ;then
			echo -e "\n${green}Install xterm...${none}\n"
			sudo xbps-install xterm
			export TERMINAL="xterm"
			printf TERM="xterm" > ~/.bashrc
			term=xterm
		fi
		if grep 'yakuake' terminal.tmp ;then
			echo -e "\n${green}Install yakuake...${none}\n"
			sudo xbps-install yakuake
			export TERMINAL="yakuake"
			printf TERM="yakuake" > ~/.bashrc
			term=yakuake
		fi
# editor
		if grep 'emacs' editor.tmp ;then
			echo -e "\n${green}Install emacs...${none}\n"
			sudo xbps-install emacs
		fi
		if grep 'micro' editor.tmp ;then
			echo -e "\n${green}Install micro...${none}\n"
			sudo xbps-install micro
		fi
		if grep 'nano' editor.tmp ;then
			echo -e "\n${green}Install nano...${none}\n"
			sudo xbps-install nano
		fi
		if grep 'vim' editor.tmp ;then
			echo -e "\n${green}Install vim...${none}\n"
			sudo xbps-install vim vim-colorschemes
		fi
# geditor
		if grep 'atom' geditor.tmp ;then
			echo -e "\n${green}Install atom...${none}\n"
			sudo xbps-install atom
		fi
		if grep 'bluefish' geditor.tmp ;then
			echo -e "\n${green}Install bluefish...${none}\n"
			sudo xbps-install bluefish
		fi
		if grep 'code-oss' geditor.tmp ;then
			echo -e "\n${green}Install code-oss...${none}\n"
			sudo xbps-install vscode
		fi
		if grep 'emacs' geditor.tmp ;then
			echo -e "\n${green}Install emacs...${none}\n"
			sudo xbps-install emacs emacs-common
			dialog --checklist "Choose emacs frontend:" 0 0 0 \
			x11 "emacs x11" off \
			gtk2 "emacs" off \
			gtk3 "emacs" off \
			qemaqcs "qemacs" off 2> emacs.tmp
			if grep x11 emacs.tmp ;then
				sudo xbps-install emacs-x11
			elif grep gtk2 emacs.tmp ;then
				sudo xbps-install emacs-gtk2
			elif grep gtk3 emacs.tmp ;then
				sudo xbps-install emacs-gtk3
			elif grep qemacs emacs.tmp ;then
				sudo xbps-install qemacs
			fi
		fi
		if grep 'geany' geditor.tmp ;then
			echo -e "\n${green}Install geany...${none}\n"
			sudo xbps-install geany geany-plugins geany-plugins-extra
		fi
		if grep 'gedit' geditor.tmp ;then
			echo -e "\n${green}Install gedit...${none}\n"
			sudo xbps-install gedit gedit-plugins
		fi
		if grep 'gvim' geditor.tmp ;then
			echo -e "\n${green}Install gvim...${none}\n"
			sudo xbps-install gvim
		fi
		if grep 'gvim-huge' geditor.tmp ;then
			echo -e "\n${green}Install gvim-huge...${none}\n"
			sudo xbps-install gvim-huge
		fi
		if grep 'kakoune' geditor.tmp ;then
			echo -e "\n${green}Install kakoune...${none}\n"
			sudo xbps-install kakoune
		fi
		if grep 'kate' geditor.tmp ;then
			echo -e "\n${green}Install kate...${none}\n"
			sudo xbps-install kate5
		fi
		if grep 'leafpad' geditor.tmp ;then
			echo -e "\n${green}Install leafpad...${none}\n"
			sudo xbps-install leafpad
		fi
		if grep 'mousepad' geditor.tmp ;then
			echo -e "\n${green}Install mousepad...${none}\n"
			sudo xbps-install mousepad
		fi
		if grep 'neovim' geditor.tmp ;then
			echo -e "\n${green}Install neovim...${none}\n"
			sudo xbps-install neovim
		fi
		if grep 'notepadqq' geditor.tmp ;then
			echo -e "\n${green}Install notepadqq...${none}\n"
			sudo xbps-install notepadqq
		fi
		if grep 'sublime' geditor.tmp ;then
			echo -e "\n${green}Install sublime...${none}\n"
			sudo xbps-install sublime-text3
		fi
		if grep 'vile' geditor.tmp ;then
			echo -e "\n${green}Install vile...${none}\n"
			sudo xbps-install vile
		fi
		if grep 'zile' geditor.tmp ;then
			echo -e "\n${green}Install zile...${none}\n"
			sudo xbps-install zile
		fi
# browser
		if grep 'badwolf' browser.tmp ;then
			echo -e "\n${green}Install badwolf...${none}\n"
			sudo xbps-install badwolf
		fi
		if grep 'chromium' browser.tmp ;then
			echo -e "\n${green}Install chromium...${none}\n"
			sudo xbps-install chromium
		fi
		if grep 'falkon' browser.tmp ;then
			echo -e "\n${green}Install falkon...${none}\n"
			sudo xbps-install falkon
		fi
		if grep 'firefox' browser.tmp ;then
			echo -e "\n${green}Install firefox...${none}\n"
			sudo xbps-install firefox
		fi
		if grep 'firefox-esr' browser.tmp ;then
			echo -e "\n${green}Install firefox-esr...${none}\n"
			sudo xbps-install firefox-esr
		fi
		if grep 'qutebrowser' browser.tmp ;then
			echo -e "\n${green}Install qutebrowser...${none}\n"
			sudo xbps-install qutebrowser
		fi
# media
		if grep 'audacious' media.tmp ;then
			echo -e "\n${green}Install audacious...${none}\n"
			sudo xbps-install audacious
		fi
		if grep 'deadbeef' media.tmp ;then
			echo -e "\n${green}Install deadbeef...${none}\n"
			sudo xbps-install deadbeef
		fi
		if grep 'moc' media.tmp ;then
			echo -e "\n${green}Install moc...${none}\n"
			sudo xbps-install moc
		fi
		if grep 'mplayer' media.tmp ;then
			echo -e "\n${green}Install mplayer...${none}\n"
			sudo xbps-install mplayer
		fi
		if grep 'mpv' media.tmp ;then
			echo -e "\n${green}Install mpv...${none}\n"
			sudo xbps-install mpv
		fi
		if grep 'parole' media.tmp ;then
			echo -e "\n${green}Install parole...${none}\n"
			sudo xbps-install parole
		fi
		if grep 'qmmp' media.tmp ;then
			echo -e "\n${green}Install qmmp...${none}\n"
			sudo xbps-install qmmp
		fi
		if grep 'rage-player' media.tmp ;then
			echo -e "\n${green}Install rage-player...${none}\n"
			sudo xbps-install rage-player
		fi
		if grep 'strawberry' media.tmp ;then
			echo -e "\n${green}Install strawberry...${none}\n"
			sudo xbps-install strawberry
		fi
		if grep 'totem' media.tmp ;then
			echo -e "\n${green}Install totem...${none}\n"
			sudo xbps-install totem
		fi
		if grep 'vlc' media.tmp ;then
			echo -e "\n${green}Install vlc...${none}\n"
			sudo xbps-install vlc
		fi
		if grep 'xnoise' media.tmp ;then
			echo -e "\n${green}Install xnoise...${none}\n"
			sudo xbps-install xnoise
		fi
# net
		if grep 'connman' net.tmp ;then
			echo -e "\n${green}Install connman...${none}\n"
			sudo xbps-install connman
			if grep 'cmst' connman.tmp ;then
				sudo xbps-install cmst
			fi
			if grep 'gtk' connman.tmp ;then
				sudo xbps-install connman-gtk
			fi
			if grep 'ncurses' connman.tmp ;then
				sudo xbps-install connman-ncurses
			fi
			if grep 'tray' connman.tmp ;then
				sudo xbps-install connman-ui
			fi
			if [ -L /var/service/connmand ]; then
				echo -n "$green"
				echo "Service connmand already exist. Continue.${none}\n"
			else
				sudo ln -sv /etc/sv/connmand /var/service
			fi
		fi
		if grep 'networkmanager' net.tmp ;then
			echo -e "\n${green}Install NetworkManager...${none}\n"
			sudo xbps-install NetworkManager NetworkManager-openvpn NetworkManager-openconnect NetworkManager-vpnc NetworkManager-l2tp
			if grep 'gtk' networkmanager.tmp ;then
				echo -e "\n${green}Install NetworkManager applet...${none}\n"
				sudo xbps-install network-manager-applet
			fi
			if grep 'qt' networkmanager.tmp ;then
				echo -e "\n${green}Install NetworkManager tray icon qt...${none}\n"
				sudo xbps-install nm-tray
			fi
			if grep 'plasma' networkmanager.tmp ;then
				echo -e "\n${green}Install NetworkManager plasma applet...${none}\n"
				sudo xbps-install plasma-nm
			fi
			sudo ln -sv /etc/sv/NetworkManager /var/service
		fi
# virt
	if grep 'aqemu' virt.tmp ;then
		echo -e "\n${green}Install aqemu...${none}\n"
		sudo xbps-install aqemu
	fi
	if grep 'barrier' virt.tmp ;then
		echo -e "\n${green}Install barrier...${none}\n"
		sudo xbps-install barrier barrier-gui
	fi
	if grep 'passthrough' virt.tmp ;then
		echo -e "\n${green}Install passthrough...${none}\n"
		if [ -a /sbin/vfio-pci-override-vga.sh ] ;then
			echo "Please uninstall Passthrough Helper first! Then run gpu_passthrough.sh again."
			exit
		fi
		echo "Installing required packages"
		sudo xbps-install -S qemu libvirt virt-manager wget
		echo "Activating libvirt services"
		sudo gpasswd -a "$USER" libvirt
		sudo ln -s /etc/sv/libvirtd /var/service
		sudo ln -s /etc/sv/virtlockd /var/service
		sudo ln -s /etc/sv/virtlogd /var/service
		echo  "Creating backups"
		cat /etc/default/grub > grub_backup.txt
		if [ -a /etc/modprobe.d/local.conf ] ;then
			sudo mv /etc/modprobe.d/local.conf modprobe.backup
		fi
		if [ -a /etc/dracut.conf.d/local.conf ] ;then
			sudo mv /etc/dracut.conf.d/local.conf local.conf.backup
		fi
			chmod +x uninstall.sh
			sudo cp /etc/default/grub new_grub
			CPU=$(lscpu | grep GenuineIntel | rev | cut -d ' ' -f 1 | rev )
			INTEL="0"
		if [ "$CPU" = "GenuineIntel" ] ;then
			INTEL="1"
		fi
		if [ $INTEL = 1 ] ;then
			IOMMU="intel_iommu=on rd.driver.pre=vfio-pci kvm.ignore_msrs=1"
			echo "Set Intel IOMMU On"
		else
			IOMMU="amd_iommu=on rd.driver.pre=vfio-pci kvm.ignore_msrs=1"
			echo "Set AMD IOMMU On"
		fi
		OLD_OPTIONS=`cat new_grub | grep GRUB_CMDLINE_LINUX | cut -d '"' -f 1,2`
		NEW_OPTIONS="$OLD_OPTIONS $IOMMU\""
		echo "$NEW_OPTIONS"
		sed -i -e "s|^GRUB_CMDLINE_LINUX.*|${NEW_OPTIONS}|" new_grub
		EDITOR=$EDITOR
		if [ -e /bin/nano ] ;then
			EDITOR=nano
		elif  [ -e /bin/micro ] ;then
			EDITOR=micro
		else
			EDITOR=vim
		fi
		echo
		echo "Grub was modified to look like this: "
		echo `cat new_grub | grep "GRUB_CMDLINE_LINUX"`
		echo
		echo "Do you want to edit it? y/n"
		read YN
		if [ "$YN" = y ] ;then
			$EDITOR new_grub
		fi
		sudo cp new_grub /etc/default/grub
		echo "Getting GPU passthrough scripts ready"
		sudo cp vfio-pci-override-vga.sh /sbin/vfio-pci-override-vga.sh
		sudo chmod 755 /sbin/vfio-pci-override-vga.sh
		sudo echo "install vfio-pci /sbin/vfio-pci-override-vga.sh" > /etc/modprobe.d/local.conf
		sudo cp local.conf /etc/dracut.conf.d/local.conf
		echo "Updating grub and generating initramfs"
		sudo grub-mkconfig -o /boot/grub/grub.cfg
		sudo dracut -f --kver $(uname -r)
		echo -e "\e[32m Getting latest ovmf from kraxel.org\e[0m"
		wget -m -np -nd -A "edk2.git-ovmf-x64*.noarch.rpm" https://www.kraxel.org/repos/jenkins/edk2/
		mv *.noarch.rpm edk2.git-ovmf-x64.noarch.rpm
		if [ -e /bin/rpmextract ] ;then
			rpmextract edk2.git-ovmf-x64.noarch.rpm
		else
			xbps-install -y rpmextract
			rpmextract edk2.git-ovmf-x64.noarch.rpm
			xbps-remove -y rpmextract
		fi
		sudo cp -rv usr/share /usr/
		echo -e "\e[32m Script finished\e[0m"
	fi
	if grep 'qemu' virt.tmp ;then
		echo -e "\n${green}Install qemu...${none}\n"
		sudo xbps-install qemu
	fi
	if grep 'qemu-ga' virt.tmp ;then
		echo -e "\n${green}Install qemu guest agent...${none}\n"
		sudo xbps-install qemu-ga
	fi
	if grep 'virt-manager' virt.tmp ;then
		echo -e "\n${green}Install virt-manager...${none}\n"
		sudo xbps-install virt-manager libvirt
		sudo ln -sv /etc/sv/libvirtd /var/service
	fi
	if grep 'vbox' virt.tmp ;then
		echo -e "\n${green}Install virtualbox...${none}\n"
		sudo xbps-install virtualbox-ose
	fi
	if grep 'vbox-guest' virt.tmp ;then
		echo -e "\n${green}Install virtualbox guest utilities...${none}\n"
		sudo xbps-install virtualbox-ose-guest
	fi
# backup
	if grep 'borg' backup.tmp ;then
		echo -e "\n${green}Install borg...${none}\n"
		sudo xbps-install borg
	fi
	if grep 'dejadup' backup.tmp ;then
		echo -e "\n${green}Install dejadup...${none}\n"
		sudo xbps-install dejadup
	fi
	if grep 'timeshift' backup.tmp ;then
		echo -e "\n${green}Install timeshift...${none}\n"
		sudo xbps-install timeshift
	fi
	fi
fi
